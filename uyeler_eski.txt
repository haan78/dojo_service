public static function uyeler_eski($post)
    {
        $mongo = self::mongo();
        $limit = 1000;
        if (property_exists($post, "limit")) {
            $limit = $post->limit;
        }

        $match = [];
        if (property_exists($post, "active")) {
            $match["active"] = $post->active;
        }

        if (property_exists($post, "_id") && !is_null($post->_id)) {
            $match["_id"] = Cast::toObjectId($post->_id);
        }

        if (property_exists($post, "email_activation") && !is_null($post->email_activation)) {
            $match["email_activation"] = $post->email_activation;
        }

        $lookup = [
            'from' => 'gelirgider',
            'localField' => '_id',
            'foreignField' => 'uye_id',
            'pipeline' => [
                [
                    '$match' => [
                        '$and' => [
                            ['$expr' => ['$eq' => ['$tur', 'GELIR']]],
                            ['$expr' => ['$gt' => ['$ay', 0]]]
                        ]
                    ]
                ]
            ],
            'as' => 'aidatlar'
        ];

        $ucayonce = Cast::toUTCDateTime((new DateTime())->sub(new \DateInterval('P3M')));

        $project = [
            'ad' => 1,
            'cinsiyet' => 1,
            'email' => 1,
            'ekfno' => 1,
            'ogrenci' => 1,
            'active' => 1,
            'dogum' => 1,
            'keikolar' => 1,
            'img' => 1,
            'email_activation' => 1,
            'son3ay' => [
                '$size' => [
                    '$filter' => [
                        'input' => '$keikolar',
                        'as' => 'tarih',
                        'cond' => ['$gte' => ['$$tarih', $ucayonce]]
                    ]
                ]
            ],
            'sinavlar' => 1
        ];

        $fnc = function ($row) {
            //var_dump($row); die();
            $r = $row;
            if (!property_exists($r, "keikolar")) {
                $r->keikolar = [];
            }
            $r->sonkeiko = (count($r->keikolar) > 0 ? max($r->keikolar) : null);

            $arr = [];
            $thismounth = date("Y-m");
            for ($i = 0; $i < count($r->keikolar); $i++) {
                $mounth = substr($r->keikolar[$i], 0, 7);
                if ($mounth != $thismounth) {
                    array_push($arr, $mounth);
                }
            }
            $keikolar = array_unique($arr, SORT_STRING);

            $aidatlar = [];
            for ($i = 0; $i < count($r->aidatlar); $i++) {
                $a = $r->aidatlar[$i];
                $tar = $a->yil . "-" . str_pad($a->ay, 2, "0", STR_PAD_LEFT);
                array_push($aidatlar, $tar);
            }

            $r->aidateksigi = array_values(array_diff($keikolar, $aidatlar));
            unset($r->keikolar);
            unset($r->aidatlar);
            return $r;
        };

        return Cast::toTable(
            $mongo->selectCollection("uye")->aggregate([
                ['$match' => $match],
                ['$project' => $project],
                ['$lookup' => $lookup],
                ['$limit' => $limit]
            ]),
            $fnc
        );
    }